{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Servidor de Desafios O Servidor de Desafios foi criado com o objetivo de ser uma plataforma de apoio para a disciplina de Design de Software, ministrada no primeiro semestre dos cursos de Engenharia do Insper, em S\u00e3o Paulo/SP. Nela os professores da disciplina podem colocar desafios para que os alunos loguem na plataforma, submetam as suas solu\u00e7\u00f5es e confiram se a solu\u00e7\u00e3o est\u00e1 correta ou n\u00e3o, pois a plataforma fornece um feedback da solu\u00e7\u00e3o enviada de forma automatizada. Na imagem abaixo h\u00e1 um exemplo do funcionamento da plataforma. Primeiros passos Para come\u00e7ar a utilizar o Servidor de Desafios, baixe este reposit\u00f3rio em sua m\u00e1quina com Python e siga o tutorial que se encontra na se\u00e7\u00e3o Guia de Desenvolvimento ; Professores Neste link voc\u00ea que \u00e9 professor encontrar\u00e1 um tutorial de como criar usu\u00e1rios e adicionar desafios na plataforma. Alunos Neste link voc\u00ea que \u00e9 aluno encontrar\u00e1 um tutorial de como logar na plataforma e como submeter suas solu\u00e7\u00f5es e interpretar seus feedbacks. API Neste link voc\u00ea encontrar\u00e1 uma documenta\u00e7\u00e3o da API do software.","title":"Home"},{"location":"#servidor-de-desafios","text":"O Servidor de Desafios foi criado com o objetivo de ser uma plataforma de apoio para a disciplina de Design de Software, ministrada no primeiro semestre dos cursos de Engenharia do Insper, em S\u00e3o Paulo/SP. Nela os professores da disciplina podem colocar desafios para que os alunos loguem na plataforma, submetam as suas solu\u00e7\u00f5es e confiram se a solu\u00e7\u00e3o est\u00e1 correta ou n\u00e3o, pois a plataforma fornece um feedback da solu\u00e7\u00e3o enviada de forma automatizada. Na imagem abaixo h\u00e1 um exemplo do funcionamento da plataforma.","title":"Servidor de Desafios"},{"location":"#primeiros-passos","text":"Para come\u00e7ar a utilizar o Servidor de Desafios, baixe este reposit\u00f3rio em sua m\u00e1quina com Python e siga o tutorial que se encontra na se\u00e7\u00e3o Guia de Desenvolvimento ;","title":"Primeiros passos"},{"location":"#professores","text":"Neste link voc\u00ea que \u00e9 professor encontrar\u00e1 um tutorial de como criar usu\u00e1rios e adicionar desafios na plataforma.","title":"Professores"},{"location":"#alunos","text":"Neste link voc\u00ea que \u00e9 aluno encontrar\u00e1 um tutorial de como logar na plataforma e como submeter suas solu\u00e7\u00f5es e interpretar seus feedbacks.","title":"Alunos"},{"location":"#api","text":"Neste link voc\u00ea encontrar\u00e1 uma documenta\u00e7\u00e3o da API do software.","title":"API"},{"location":"alunos/","text":"Guia de usu\u00e1rio para alunos Entrando no Servidor de Desafios Para preparar o ambiente e executar o Servidor de Desafios, veja este tutorial . Ap\u00f3s entrar na p\u00e1gina do Servidor de Desafios, uma janela pop-up aparecer\u00e1 e nela voc\u00ea dever\u00e1 inserir o seu nome de usu\u00e1rio e a sua senha, como mostra a imagem abaixo, e clicar no bot\u00e3o \"Sign in\". Pronto, voc\u00ea est\u00e1 logado na p\u00e1gina do Servidor de Desafios e j\u00e1 pode come\u00e7ar suas atividades. Enviando solu\u00e7\u00e3o correta para desafio Ap\u00f3s logar com seu usu\u00e1rio e senha na p\u00e1gina do Servidor de Desafios, clique no desafio que voc\u00ea quer enviar a solu\u00e7\u00e3o no menu do lado esquedo da p\u00e1gina. Clique no bot\u00e3o \"Choose file\", escolha o arquivo com a sua solu\u00e7\u00e3o do desafio e clique em \"Abrir\", como mostram as imagens abaixo. Ao clicar no bot\u00e3o \"Enviar\", voc\u00ea poder\u00e1 verificar na se\u00e7\u00e3o \"Envios\" o seu feedback e o resultado da sua solu\u00e7\u00e3o. Caso o resultado seja \"OK!\" e o feedback seja \"Sem erros.\" a sua solu\u00e7\u00e3o est\u00e1 correta, como mostra a imagem abaixo. Enviando solu\u00e7\u00e3o errada para desafio Caso ao clicar no bot\u00e3o \"Enviar\" aparecer outro resultado nos campos \"Feedback\" e \"Resultado\" da se\u00e7\u00e3o \"Envios\", significa que a sua solu\u00e7\u00e3o est\u00e1 incorreta ou parcialmente correta. A imagem abaixo exemplifica esta situa\u00e7\u00e3o.","title":"Aluno"},{"location":"alunos/#guia-de-usuario-para-alunos","text":"","title":"Guia de usu\u00e1rio para alunos"},{"location":"alunos/#entrando-no-servidor-de-desafios","text":"Para preparar o ambiente e executar o Servidor de Desafios, veja este tutorial . Ap\u00f3s entrar na p\u00e1gina do Servidor de Desafios, uma janela pop-up aparecer\u00e1 e nela voc\u00ea dever\u00e1 inserir o seu nome de usu\u00e1rio e a sua senha, como mostra a imagem abaixo, e clicar no bot\u00e3o \"Sign in\". Pronto, voc\u00ea est\u00e1 logado na p\u00e1gina do Servidor de Desafios e j\u00e1 pode come\u00e7ar suas atividades.","title":"Entrando no Servidor de Desafios"},{"location":"alunos/#enviando-solucao-correta-para-desafio","text":"Ap\u00f3s logar com seu usu\u00e1rio e senha na p\u00e1gina do Servidor de Desafios, clique no desafio que voc\u00ea quer enviar a solu\u00e7\u00e3o no menu do lado esquedo da p\u00e1gina. Clique no bot\u00e3o \"Choose file\", escolha o arquivo com a sua solu\u00e7\u00e3o do desafio e clique em \"Abrir\", como mostram as imagens abaixo. Ao clicar no bot\u00e3o \"Enviar\", voc\u00ea poder\u00e1 verificar na se\u00e7\u00e3o \"Envios\" o seu feedback e o resultado da sua solu\u00e7\u00e3o. Caso o resultado seja \"OK!\" e o feedback seja \"Sem erros.\" a sua solu\u00e7\u00e3o est\u00e1 correta, como mostra a imagem abaixo.","title":"Enviando solu\u00e7\u00e3o correta para desafio"},{"location":"alunos/#enviando-solucao-errada-para-desafio","text":"Caso ao clicar no bot\u00e3o \"Enviar\" aparecer outro resultado nos campos \"Feedback\" e \"Resultado\" da se\u00e7\u00e3o \"Envios\", significa que a sua solu\u00e7\u00e3o est\u00e1 incorreta ou parcialmente correta. A imagem abaixo exemplifica esta situa\u00e7\u00e3o.","title":"Enviando solu\u00e7\u00e3o errada para desafio"},{"location":"api/","text":"Servidor de Desafios API Software desenvolvido pelo professor Raul Ikeda para a disciplina Design de Software como servidor de desafios. Considere este o algoritmo Python principal do Servidor de Desafios. Abaixo est\u00e3o listadas as fun\u00e7\u00f5es dispon\u00edveis. change () change(void) - Altera a senha de um usu\u00e1rio, solicitando a senha antiga, a senha nova e uma confirma\u00e7\u00e3o da senha nova. Realiza a altera\u00e7\u00e3o apenas se a senha antiga for correta e se a confirma\u00e7\u00e3o de senha corresponder \u00e0 senha nova. Source code in src/softdes.py 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 @app . route ( '/pass' , methods = [ 'GET' , 'POST' ]) @auth . login_required def change (): \"\"\"change(void) - Altera a senha de um usu\u00e1rio, solicitando a senha antiga, a senha nova e uma confirma\u00e7\u00e3o da senha nova. Realiza a altera\u00e7\u00e3o apenas se a senha antiga for correta e se a confirma\u00e7\u00e3o de senha corresponder \u00e0 senha nova.\"\"\" if request . method == 'POST' : velha = request . form [ 'old' ] nova = request . form [ 'new' ] repet = request . form [ 'again' ] p = 1 msg = '' if nova != repet : msg = 'As novas senhas nao batem' p = 3 elif get_info ( auth . username ()) != hashlib . md5 ( velha . encode ()) . hexdigest (): msg = 'A senha antiga nao confere' p = 3 else : set_info ( hashlib . md5 ( nova . encode ()) . hexdigest (), auth . username ()) msg = 'Senha alterada com sucesso' p = 3 else : msg = '' p = 3 return render_template ( 'index.html' , username = auth . username (), challenges = get_quizes ( auth . username ()), p = p , msg = msg ) converteData ( orig ) converteData(orig) - Fun\u00e7\u00e3o de convers\u00e3o de datas para tradu\u00e7\u00e3o. Em condi\u00e7\u00f5es normais de temperatura e press\u00e3o, voc\u00ea n\u00e3o deve utilizar esta fun\u00e7\u00e3o explicitamente. Source code in src/softdes.py 48 49 50 def converteData ( orig ): \"\"\"converteData(orig) - Fun\u00e7\u00e3o de convers\u00e3o de datas para tradu\u00e7\u00e3o. Em condi\u00e7\u00f5es normais de temperatura e press\u00e3o, voc\u00ea n\u00e3o deve utilizar esta fun\u00e7\u00e3o explicitamente.\"\"\" return orig [ 8 : 10 ] + '/' + orig [ 5 : 7 ] + '/' + orig [ 0 : 4 ] + ' ' + orig [ 11 : 13 ] + ':' + orig [ 14 : 16 ] + ':' + orig [ 17 :] get_info ( user ) get_info(user) - Mostra os dados de um usu\u00e1rio que est\u00e1 no banco de dados. Source code in src/softdes.py 116 117 118 119 120 121 122 123 124 125 126 127 128 def get_info ( user ): \"\"\"get_info(user) - Mostra os dados de um usu\u00e1rio que est\u00e1 no banco de dados.\"\"\" conn = sqlite3 . connect ( DBNAME ) cursor = conn . cursor () cursor . execute ( \"SELECT pass, type from USER where user = ' {0} '\" . format ( user )) print ( \"SELECT pass, type from USER where user = ' {0} '\" . format ( user )) info = [ reg [ 0 ] for reg in cursor . fetchall ()] conn . close () if len ( info ) == 0 : return None else : return info [ 0 ] get_password ( username ) get_password(username) - Invoca a fun\u00e7\u00e3o get_info com o par\u00e2metro username. Source code in src/softdes.py 236 237 238 239 @auth . get_password def get_password ( username ): \"\"\"get_password(username) - Invoca a fun\u00e7\u00e3o get_info com o par\u00e2metro username.\"\"\" return get_info ( username ) get_quiz ( id , user ) get_quiz(id, user) - Pega o quiz de um usu\u00e1rio no banco de dados. Source code in src/softdes.py 92 93 94 95 96 97 98 99 100 101 102 103 104 def get_quiz ( id , user ): \"\"\"get_quiz(id, user) - Pega o quiz de um usu\u00e1rio no banco de dados.\"\"\" conn = sqlite3 . connect ( DBNAME ) cursor = conn . cursor () if user == 'admin' or user == 'fabioja' : cursor . execute ( \"SELECT id, release, expire, problem, tests, results, diagnosis, numb from QUIZ where id = {0} \" . format ( id )) else : cursor . execute ( \"SELECT id, release, expire, problem, tests, results, diagnosis, numb from QUIZ where id = {0} and release < ' {1} '\" . format ( id , datetime . now () . strftime ( \"%Y-%m- %d %H:%M:%S\" ))) info = [ reg for reg in cursor . fetchall ()] conn . close () return info get_quizes ( user ) Pega todos os quizes de um usu\u00e1rio espec\u00edfico. Source code in src/softdes.py 53 54 55 56 57 58 59 60 61 62 63 64 65 def get_quizes ( user ): \"\"\"Pega todos os quizes de um usu\u00e1rio espec\u00edfico.\"\"\" conn = sqlite3 . connect ( DBNAME ) cursor = conn . cursor () if user == 'admin' or user == 'fabioja' : cursor . execute ( \"SELECT id, numb from QUIZ\" . format ( datetime . now () . strftime ( \"%Y-%m- %d %H:%M:%S\" ))) else : cursor . execute ( \"SELECT id, numb from QUIZ where release < ' {0} '\" . format ( datetime . now () . strftime ( \"%Y-%m- %d %H:%M:%S\" ))) info = [ reg for reg in cursor . fetchall ()] conn . close () return info get_user_quiz ( user_id , quiz_id ) get_user_quiz(user_id, quiz_id) - Pega um quiz espec\u00edfico de um usu\u00e1rio espec\u00edfico. Source code in src/softdes.py 68 69 70 71 72 73 74 75 76 def get_user_quiz ( user_id , quiz_id ): \"\"\"get_user_quiz(user_id, quiz_id) - Pega um quiz espec\u00edfico de um usu\u00e1rio espec\u00edfico.\"\"\" conn = sqlite3 . connect ( DBNAME ) cursor = conn . cursor () cursor . execute ( \"SELECT sent,answer,result from USERQUIZ where userid = ' {0} ' and quizid = {1} order by sent desc\" . format ( user_id , quiz_id )) info = [ reg for reg in cursor . fetchall ()] conn . close () return info hash_pw ( password ) hash_pw(password) - Criptografa a senha do usu\u00e1rio. Source code in src/softdes.py 242 243 244 245 @auth . hash_password def hash_pw ( password ): \"\"\"hash_pw(password) - Criptografa a senha do usu\u00e1rio.\"\"\" return hashlib . md5 ( password . encode ()) . hexdigest () lambda_handler ( event , context ) lambda_handler(event, context) - Lida com o lambda. Dentro dela, h\u00e1 a fun\u00e7\u00e3o not_equals(first, second) que \u00e9 utilizada para lidar com o lambda. Em condi\u00e7\u00f5es normais de temperatura e press\u00e3o, voc\u00ea n\u00e3o deve utilizar esta fun\u00e7\u00e3o explicitamente. Source code in src/softdes.py 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 def lambda_handler ( event , context ): \"\"\"lambda_handler(event, context) - Lida com o lambda. Dentro dela, h\u00e1 a fun\u00e7\u00e3o not_equals(first, second) que \u00e9 utilizada para lidar com o lambda. Em condi\u00e7\u00f5es normais de temperatura e press\u00e3o, voc\u00ea n\u00e3o deve utilizar esta fun\u00e7\u00e3o explicitamente.\"\"\" try : import json import numbers def not_equals ( first , second ): if isinstance ( first , numbers . Number ) and isinstance ( second , numbers . Number ): return abs ( first - second ) > 1e-3 return first != second # TODO implement ndes = int ( event [ 'ndes' ]) code = event [ 'code' ] args = event [ 'args' ] resp = event [ 'resp' ] diag = event [ 'diag' ] exec ( code , locals ()) test = [] for index , arg in enumerate ( args ): if not 'desafio {0} ' . format ( ndes ) in locals (): return \"Nome da fun\u00e7\u00e3o inv\u00e1lido. Usar 'def desafio {0} (...)'\" . format ( ndes ) if not_equals ( eval ( 'desafio {0} (*arg)' . format ( ndes )), resp [ index ]): test . append ( diag [ index ]) return \" \" . join ( test ) except : return \"Fun\u00e7\u00e3o inv\u00e1lida.\" logout () logout(void) - Faz logout do usu\u00e1rio do sistema. Source code in src/softdes.py 230 231 232 233 @app . route ( '/logout' ) def logout (): \"\"\"logout(void) - Faz logout do usu\u00e1rio do sistema.\"\"\" return render_template ( 'index.html' , p = 2 , msg = \"Logout com sucesso\" ), 401 set_info ( pwd , user ) set_info(pwd, user) - Estabelece ou atualiza a senha de login de um usu\u00e1rio no banco de dados. Source code in src/softdes.py 107 108 109 110 111 112 113 def set_info ( pwd , user ): \"\"\"set_info(pwd, user) - Estabelece ou atualiza a senha de login de um usu\u00e1rio no banco de dados.\"\"\" conn = sqlite3 . connect ( DBNAME ) cursor = conn . cursor () cursor . execute ( \"UPDATE USER set pass = ? where user = ?\" , ( pwd , user )) conn . commit () conn . close () set_user_quiz ( userid , quizid , sent , answer , result ) set_user_quiz(userid, quizid, sent, answer, result) - Insere no banco de dados a solu\u00e7\u00e3o enviada por um usu\u00e1rio para um quiz. Source code in src/softdes.py 79 80 81 82 83 84 85 86 87 88 89 def set_user_quiz ( userid , quizid , sent , answer , result ): \"\"\"set_user_quiz(userid, quizid, sent, answer, result) - Insere no banco de dados a solu\u00e7\u00e3o enviada por um usu\u00e1rio para um quiz.\"\"\" conn = sqlite3 . connect ( DBNAME ) cursor = conn . cursor () #print(\"insert into USERQUIZ(userid,quizid,sent,answer,result) values ('{0}',{1},'{2}','{3}','{4}');\".format(userid, quizid, sent, answer, result)) #cursor.execute(\"insert into USERQUIZ(userid,quizid,sent,answer,result) values ('{0}',{1},'{2}','{3}','{4}');\".format(userid, quizid, sent, answer, result)) cursor . execute ( \"insert into USERQUIZ(userid,quizid,sent,answer,result) values (?,?,?,?,?);\" , ( userid , quizid , sent , answer , result )) # conn . commit () conn . close ()","title":"API"},{"location":"api/#servidor-de-desafios-api","text":"","title":"Servidor de Desafios API"},{"location":"api/#softdes","text":"Software desenvolvido pelo professor Raul Ikeda para a disciplina Design de Software como servidor de desafios. Considere este o algoritmo Python principal do Servidor de Desafios. Abaixo est\u00e3o listadas as fun\u00e7\u00f5es dispon\u00edveis.","title":"softdes"},{"location":"api/#softdes.change","text":"change(void) - Altera a senha de um usu\u00e1rio, solicitando a senha antiga, a senha nova e uma confirma\u00e7\u00e3o da senha nova. Realiza a altera\u00e7\u00e3o apenas se a senha antiga for correta e se a confirma\u00e7\u00e3o de senha corresponder \u00e0 senha nova. Source code in src/softdes.py 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 @app . route ( '/pass' , methods = [ 'GET' , 'POST' ]) @auth . login_required def change (): \"\"\"change(void) - Altera a senha de um usu\u00e1rio, solicitando a senha antiga, a senha nova e uma confirma\u00e7\u00e3o da senha nova. Realiza a altera\u00e7\u00e3o apenas se a senha antiga for correta e se a confirma\u00e7\u00e3o de senha corresponder \u00e0 senha nova.\"\"\" if request . method == 'POST' : velha = request . form [ 'old' ] nova = request . form [ 'new' ] repet = request . form [ 'again' ] p = 1 msg = '' if nova != repet : msg = 'As novas senhas nao batem' p = 3 elif get_info ( auth . username ()) != hashlib . md5 ( velha . encode ()) . hexdigest (): msg = 'A senha antiga nao confere' p = 3 else : set_info ( hashlib . md5 ( nova . encode ()) . hexdigest (), auth . username ()) msg = 'Senha alterada com sucesso' p = 3 else : msg = '' p = 3 return render_template ( 'index.html' , username = auth . username (), challenges = get_quizes ( auth . username ()), p = p , msg = msg )","title":"change()"},{"location":"api/#softdes.converteData","text":"converteData(orig) - Fun\u00e7\u00e3o de convers\u00e3o de datas para tradu\u00e7\u00e3o. Em condi\u00e7\u00f5es normais de temperatura e press\u00e3o, voc\u00ea n\u00e3o deve utilizar esta fun\u00e7\u00e3o explicitamente. Source code in src/softdes.py 48 49 50 def converteData ( orig ): \"\"\"converteData(orig) - Fun\u00e7\u00e3o de convers\u00e3o de datas para tradu\u00e7\u00e3o. Em condi\u00e7\u00f5es normais de temperatura e press\u00e3o, voc\u00ea n\u00e3o deve utilizar esta fun\u00e7\u00e3o explicitamente.\"\"\" return orig [ 8 : 10 ] + '/' + orig [ 5 : 7 ] + '/' + orig [ 0 : 4 ] + ' ' + orig [ 11 : 13 ] + ':' + orig [ 14 : 16 ] + ':' + orig [ 17 :]","title":"converteData()"},{"location":"api/#softdes.get_info","text":"get_info(user) - Mostra os dados de um usu\u00e1rio que est\u00e1 no banco de dados. Source code in src/softdes.py 116 117 118 119 120 121 122 123 124 125 126 127 128 def get_info ( user ): \"\"\"get_info(user) - Mostra os dados de um usu\u00e1rio que est\u00e1 no banco de dados.\"\"\" conn = sqlite3 . connect ( DBNAME ) cursor = conn . cursor () cursor . execute ( \"SELECT pass, type from USER where user = ' {0} '\" . format ( user )) print ( \"SELECT pass, type from USER where user = ' {0} '\" . format ( user )) info = [ reg [ 0 ] for reg in cursor . fetchall ()] conn . close () if len ( info ) == 0 : return None else : return info [ 0 ]","title":"get_info()"},{"location":"api/#softdes.get_password","text":"get_password(username) - Invoca a fun\u00e7\u00e3o get_info com o par\u00e2metro username. Source code in src/softdes.py 236 237 238 239 @auth . get_password def get_password ( username ): \"\"\"get_password(username) - Invoca a fun\u00e7\u00e3o get_info com o par\u00e2metro username.\"\"\" return get_info ( username )","title":"get_password()"},{"location":"api/#softdes.get_quiz","text":"get_quiz(id, user) - Pega o quiz de um usu\u00e1rio no banco de dados. Source code in src/softdes.py 92 93 94 95 96 97 98 99 100 101 102 103 104 def get_quiz ( id , user ): \"\"\"get_quiz(id, user) - Pega o quiz de um usu\u00e1rio no banco de dados.\"\"\" conn = sqlite3 . connect ( DBNAME ) cursor = conn . cursor () if user == 'admin' or user == 'fabioja' : cursor . execute ( \"SELECT id, release, expire, problem, tests, results, diagnosis, numb from QUIZ where id = {0} \" . format ( id )) else : cursor . execute ( \"SELECT id, release, expire, problem, tests, results, diagnosis, numb from QUIZ where id = {0} and release < ' {1} '\" . format ( id , datetime . now () . strftime ( \"%Y-%m- %d %H:%M:%S\" ))) info = [ reg for reg in cursor . fetchall ()] conn . close () return info","title":"get_quiz()"},{"location":"api/#softdes.get_quizes","text":"Pega todos os quizes de um usu\u00e1rio espec\u00edfico. Source code in src/softdes.py 53 54 55 56 57 58 59 60 61 62 63 64 65 def get_quizes ( user ): \"\"\"Pega todos os quizes de um usu\u00e1rio espec\u00edfico.\"\"\" conn = sqlite3 . connect ( DBNAME ) cursor = conn . cursor () if user == 'admin' or user == 'fabioja' : cursor . execute ( \"SELECT id, numb from QUIZ\" . format ( datetime . now () . strftime ( \"%Y-%m- %d %H:%M:%S\" ))) else : cursor . execute ( \"SELECT id, numb from QUIZ where release < ' {0} '\" . format ( datetime . now () . strftime ( \"%Y-%m- %d %H:%M:%S\" ))) info = [ reg for reg in cursor . fetchall ()] conn . close () return info","title":"get_quizes()"},{"location":"api/#softdes.get_user_quiz","text":"get_user_quiz(user_id, quiz_id) - Pega um quiz espec\u00edfico de um usu\u00e1rio espec\u00edfico. Source code in src/softdes.py 68 69 70 71 72 73 74 75 76 def get_user_quiz ( user_id , quiz_id ): \"\"\"get_user_quiz(user_id, quiz_id) - Pega um quiz espec\u00edfico de um usu\u00e1rio espec\u00edfico.\"\"\" conn = sqlite3 . connect ( DBNAME ) cursor = conn . cursor () cursor . execute ( \"SELECT sent,answer,result from USERQUIZ where userid = ' {0} ' and quizid = {1} order by sent desc\" . format ( user_id , quiz_id )) info = [ reg for reg in cursor . fetchall ()] conn . close () return info","title":"get_user_quiz()"},{"location":"api/#softdes.hash_pw","text":"hash_pw(password) - Criptografa a senha do usu\u00e1rio. Source code in src/softdes.py 242 243 244 245 @auth . hash_password def hash_pw ( password ): \"\"\"hash_pw(password) - Criptografa a senha do usu\u00e1rio.\"\"\" return hashlib . md5 ( password . encode ()) . hexdigest ()","title":"hash_pw()"},{"location":"api/#softdes.lambda_handler","text":"lambda_handler(event, context) - Lida com o lambda. Dentro dela, h\u00e1 a fun\u00e7\u00e3o not_equals(first, second) que \u00e9 utilizada para lidar com o lambda. Em condi\u00e7\u00f5es normais de temperatura e press\u00e3o, voc\u00ea n\u00e3o deve utilizar esta fun\u00e7\u00e3o explicitamente. Source code in src/softdes.py 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 def lambda_handler ( event , context ): \"\"\"lambda_handler(event, context) - Lida com o lambda. Dentro dela, h\u00e1 a fun\u00e7\u00e3o not_equals(first, second) que \u00e9 utilizada para lidar com o lambda. Em condi\u00e7\u00f5es normais de temperatura e press\u00e3o, voc\u00ea n\u00e3o deve utilizar esta fun\u00e7\u00e3o explicitamente.\"\"\" try : import json import numbers def not_equals ( first , second ): if isinstance ( first , numbers . Number ) and isinstance ( second , numbers . Number ): return abs ( first - second ) > 1e-3 return first != second # TODO implement ndes = int ( event [ 'ndes' ]) code = event [ 'code' ] args = event [ 'args' ] resp = event [ 'resp' ] diag = event [ 'diag' ] exec ( code , locals ()) test = [] for index , arg in enumerate ( args ): if not 'desafio {0} ' . format ( ndes ) in locals (): return \"Nome da fun\u00e7\u00e3o inv\u00e1lido. Usar 'def desafio {0} (...)'\" . format ( ndes ) if not_equals ( eval ( 'desafio {0} (*arg)' . format ( ndes )), resp [ index ]): test . append ( diag [ index ]) return \" \" . join ( test ) except : return \"Fun\u00e7\u00e3o inv\u00e1lida.\"","title":"lambda_handler()"},{"location":"api/#softdes.logout","text":"logout(void) - Faz logout do usu\u00e1rio do sistema. Source code in src/softdes.py 230 231 232 233 @app . route ( '/logout' ) def logout (): \"\"\"logout(void) - Faz logout do usu\u00e1rio do sistema.\"\"\" return render_template ( 'index.html' , p = 2 , msg = \"Logout com sucesso\" ), 401","title":"logout()"},{"location":"api/#softdes.set_info","text":"set_info(pwd, user) - Estabelece ou atualiza a senha de login de um usu\u00e1rio no banco de dados. Source code in src/softdes.py 107 108 109 110 111 112 113 def set_info ( pwd , user ): \"\"\"set_info(pwd, user) - Estabelece ou atualiza a senha de login de um usu\u00e1rio no banco de dados.\"\"\" conn = sqlite3 . connect ( DBNAME ) cursor = conn . cursor () cursor . execute ( \"UPDATE USER set pass = ? where user = ?\" , ( pwd , user )) conn . commit () conn . close ()","title":"set_info()"},{"location":"api/#softdes.set_user_quiz","text":"set_user_quiz(userid, quizid, sent, answer, result) - Insere no banco de dados a solu\u00e7\u00e3o enviada por um usu\u00e1rio para um quiz. Source code in src/softdes.py 79 80 81 82 83 84 85 86 87 88 89 def set_user_quiz ( userid , quizid , sent , answer , result ): \"\"\"set_user_quiz(userid, quizid, sent, answer, result) - Insere no banco de dados a solu\u00e7\u00e3o enviada por um usu\u00e1rio para um quiz.\"\"\" conn = sqlite3 . connect ( DBNAME ) cursor = conn . cursor () #print(\"insert into USERQUIZ(userid,quizid,sent,answer,result) values ('{0}',{1},'{2}','{3}','{4}');\".format(userid, quizid, sent, answer, result)) #cursor.execute(\"insert into USERQUIZ(userid,quizid,sent,answer,result) values ('{0}',{1},'{2}','{3}','{4}');\".format(userid, quizid, sent, answer, result)) cursor . execute ( \"insert into USERQUIZ(userid,quizid,sent,answer,result) values (?,?,?,?,?);\" , ( userid , quizid , sent , answer , result )) # conn . commit () conn . close ()","title":"set_user_quiz()"},{"location":"desenvolvimento/","text":"Guia de Desenvolvimento Configurando o ambiente de desenvolvimento Instalando as depend\u00eancias Instale as seguintes bibliotecas python: sqlite3 json hashlib flask flaskhttpauth Instale tamb\u00e9m o SQLite3 na m\u00e1quina. Instalando o software Configurando o banco de dados Crie o banco de dados da aplica\u00e7\u00e3o rodando o comando a seguir no diret\u00f3rio do Servidor de Desafios: sqlite3 quiz.db < quiz.sql Rodando o servidor Rode o arquivo softdes.py com o comando a seguir no terminal: python3 softdes.py Abra um navegador e siga para este endere\u00e7o . Estrutura do C\u00f3digo O c\u00f3digo desse software se encontra dividido em 2 arquivos python. No arquivo softdes.py , se encontra o c\u00f3digo do servidor, onde ele vai fazer seguir a estrutura da API . No arquivo adduser.py , se encontra o c\u00f3digo que adiciona novos usu\u00e1rios para o banco de dados. No arquivo quiz.sql , se encontra a estrutura do banco de dados da aplica\u00e7\u00e3o. No arquivo user.sql , se encontra a estrutura do banco de dados do usu\u00e1rio. O arquivo desafio.py \u00e9 a resposta de um exemplo de um desafio do software.","title":"Guia de Desenvolvimento"},{"location":"desenvolvimento/#guia-de-desenvolvimento","text":"","title":"Guia de Desenvolvimento"},{"location":"desenvolvimento/#configurando-o-ambiente-de-desenvolvimento","text":"","title":"Configurando o ambiente de desenvolvimento"},{"location":"desenvolvimento/#instalando-as-dependencias","text":"Instale as seguintes bibliotecas python: sqlite3 json hashlib flask flaskhttpauth Instale tamb\u00e9m o SQLite3 na m\u00e1quina.","title":"Instalando as depend\u00eancias"},{"location":"desenvolvimento/#instalando-o-software","text":"","title":"Instalando o software"},{"location":"desenvolvimento/#configurando-o-banco-de-dados","text":"Crie o banco de dados da aplica\u00e7\u00e3o rodando o comando a seguir no diret\u00f3rio do Servidor de Desafios: sqlite3 quiz.db < quiz.sql","title":"Configurando o banco de dados"},{"location":"desenvolvimento/#rodando-o-servidor","text":"Rode o arquivo softdes.py com o comando a seguir no terminal: python3 softdes.py Abra um navegador e siga para este endere\u00e7o .","title":"Rodando o servidor"},{"location":"desenvolvimento/#estrutura-do-codigo","text":"O c\u00f3digo desse software se encontra dividido em 2 arquivos python. No arquivo softdes.py , se encontra o c\u00f3digo do servidor, onde ele vai fazer seguir a estrutura da API . No arquivo adduser.py , se encontra o c\u00f3digo que adiciona novos usu\u00e1rios para o banco de dados. No arquivo quiz.sql , se encontra a estrutura do banco de dados da aplica\u00e7\u00e3o. No arquivo user.sql , se encontra a estrutura do banco de dados do usu\u00e1rio. O arquivo desafio.py \u00e9 a resposta de um exemplo de um desafio do software.","title":"Estrutura do C\u00f3digo"},{"location":"professores/","text":"Guia de usu\u00e1rio para professores Nesta p\u00e1gina voc\u00ea encontrar\u00e1 um passo a passo de como adicionar novos usu\u00e1rios e novos desafios ao Servidor de Desafios. Adicionando usu\u00e1rios Para adicionar um novo usu\u00e1rio ao Servidor de Desafios ser\u00e1 necess\u00e1rio abrir o arquivo users.csv em um editor de texto e escrever o login do usu\u00e1rio, a senha e o tipo do usu\u00e1rio. Os tipos de usu\u00e1rio poss\u00edveis s\u00e3o \"admin\", para usu\u00e1rios que podem fazer qualquer tipo de a\u00e7\u00e3o no Servidor de Desafios (como professores) e \"aluno\" para usu\u00e1rios que tem suas a\u00e7\u00f5es restringidas no Servidor de Desafios (como alunos). Essas tr\u00eas informa\u00e7\u00f5es devem estar na mesma linha e devem ser separadas por v\u00edrgulas, como mostra a imagem abaixo. Ser\u00e1 necess\u00e1rio abrir um terminal na pasta onde se encontram os arquivos do Servidor de Desafios e executar o arquivo adduser.py python3 adduser.py O output esperado est\u00e1 na imagem abaixo. Adicionando desafios Para adicionar um novo desafio ao Servidor de Desafios ser\u00e1 necess\u00e1rio adiciona-lo no banco de dados atrav\u00e9s do terminal. Para isso, abra o terminal no diret\u00f3rio do Servidor de Desafios e execute o comando a seguir: sqlite3 quiz.db Como mostra a imagem abaixo. Em seguida, no terminal SQLite3, execute o comando abaixo. Insert into QUIZ(numb, release, expire, problem, tests, results, diagnosis) values ([ numero ], [Data de Inicio],[Data de Expira\u00e7\u00e3o],[Exemplo do problema],[Entradas de Teste],[Resultado Esperado],[Diagn\u00f3stico para cada entrada]); Como est\u00e1 exemplificado na imagem abaixo.","title":"Professor"},{"location":"professores/#guia-de-usuario-para-professores","text":"Nesta p\u00e1gina voc\u00ea encontrar\u00e1 um passo a passo de como adicionar novos usu\u00e1rios e novos desafios ao Servidor de Desafios.","title":"Guia de usu\u00e1rio para professores"},{"location":"professores/#adicionando-usuarios","text":"Para adicionar um novo usu\u00e1rio ao Servidor de Desafios ser\u00e1 necess\u00e1rio abrir o arquivo users.csv em um editor de texto e escrever o login do usu\u00e1rio, a senha e o tipo do usu\u00e1rio. Os tipos de usu\u00e1rio poss\u00edveis s\u00e3o \"admin\", para usu\u00e1rios que podem fazer qualquer tipo de a\u00e7\u00e3o no Servidor de Desafios (como professores) e \"aluno\" para usu\u00e1rios que tem suas a\u00e7\u00f5es restringidas no Servidor de Desafios (como alunos). Essas tr\u00eas informa\u00e7\u00f5es devem estar na mesma linha e devem ser separadas por v\u00edrgulas, como mostra a imagem abaixo. Ser\u00e1 necess\u00e1rio abrir um terminal na pasta onde se encontram os arquivos do Servidor de Desafios e executar o arquivo adduser.py python3 adduser.py O output esperado est\u00e1 na imagem abaixo.","title":"Adicionando usu\u00e1rios"},{"location":"professores/#adicionando-desafios","text":"Para adicionar um novo desafio ao Servidor de Desafios ser\u00e1 necess\u00e1rio adiciona-lo no banco de dados atrav\u00e9s do terminal. Para isso, abra o terminal no diret\u00f3rio do Servidor de Desafios e execute o comando a seguir: sqlite3 quiz.db Como mostra a imagem abaixo. Em seguida, no terminal SQLite3, execute o comando abaixo. Insert into QUIZ(numb, release, expire, problem, tests, results, diagnosis) values ([ numero ], [Data de Inicio],[Data de Expira\u00e7\u00e3o],[Exemplo do problema],[Entradas de Teste],[Resultado Esperado],[Diagn\u00f3stico para cada entrada]); Como est\u00e1 exemplificado na imagem abaixo.","title":"Adicionando desafios"}]}